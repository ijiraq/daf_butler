# Storage Classes used by tests
storageClasses:
  StructuredDataDictYaml:
    pytype: dict
  StructuredDataListYaml:
    pytype: list
    delegate: lsst.daf.butler.tests.ListDelegate
    parameters:
      - slice
  StructuredDataDictJson:
    pytype: dict
    converters:
      lsst.daf.butler.tests.MetricsExample: lsst.daf.butler.tests.MetricsExample.exportAsDict
  StructuredDataListJson:
    pytype: list
  StructuredDataDictPickle:
    pytype: dict
  StructuredDataListPickle:
    pytype: list
  StructuredDataNoComponents:
    # Reading and writing a blob and no components known
    pytype: lsst.daf.butler.tests.MetricsExample
    delegate: lsst.daf.butler.tests.MetricsDelegate
    parameters:
      - slice
    converters:
      dict: lsst.daf.butler.tests.MetricsExample.makeFromDict
  StructuredData:
    # Data from a simple Python class
    pytype: lsst.daf.butler.tests.MetricsExample
    delegate: lsst.daf.butler.tests.MetricsDelegate
    # Use YAML formatter by default
    components:
      # Components are those supported by get.
      summary: StructuredDataDictYaml
      output: StructuredDataDictYaml
      data: StructuredDataListYaml
    converters:
      lsst.daf.butler.tests.MetricsExampleModel: lsst.daf.butler.tests.MetricsExample.from_model
  StructuredDataJson:
    inheritsFrom: StructuredData
  StructuredDataPickle:
    inheritsFrom: StructuredData
  StructuredComposite:
    inheritsFrom: StructuredData
    parameters:
      - slice
  StructuredCompositeTestA:
    inheritsFrom: StructuredComposite
    components:
      summary: StructuredDataDictJson
      output: StructuredDataDictJson
      data: StructuredDataListJson
  StructuredCompositeTestB:
    inheritsFrom: StructuredComposite
    components:
      summary: StructuredDataDictPickle
      output: StructuredDataDictJson
      data: StructuredDataListYaml
  ThingOne:
    pytype: dict
    parameters:
      - param1
      - param2
  ThingTwo:
    inheritsFrom: ThingOne
    parameters:
      - param3
  StructuredDataDataTest:
    pytype: list
    delegate: lsst.daf.butler.tests.ListDelegate
    derivedComponents:
      counter: Integer
    parameters:
      - slice
  StructuredDataDataTestTuple:
    pytype: tuple
    delegate: lsst.daf.butler.tests.ListDelegate
    derivedComponents:
      counter: Integer
    parameters:
      - slice
    converters:
      builtins.list: builtins.tuple
  Integer:
    pytype: int
  StructuredCompositeReadComp:
    inheritsFrom: StructuredComposite
    components:
      summary: StructuredDataDictYaml
      output: StructuredDataDictYaml
      data: StructuredDataDataTest
    derivedComponents:
      counter: Integer
  StructuredCompositeReadCompNoDisassembly:
    inheritsFrom: StructuredCompositeReadComp
  StructuredDataNoComponentsModel:
    # Reading and writing a blob and no components known
    pytype: lsst.daf.butler.tests.MetricsExampleModel
    converters:
      lsst.daf.butler.tests.MetricsExample: lsst.daf.butler.tests.MetricsExampleModel.from_metrics
      # Add some entries that will fail to import.
      lsst.daf.butler.bad.type: lsst.daf.butler.tests.MetricsExampleModel.from_metrics
      lsst.daf.butler.tests.MetricsExampleModel: lsst.daf.butler.bad.function
      lsst.daf.butler.Butler: lsst.daf.butler.location.__all__
  MetricsConversion:
    # Special storage class to test conversions with components and params.
    pytype: lsst.daf.butler.tests.MetricsExampleModel
    delegate: lsst.daf.butler.tests.MetricsDelegate
    parameters:
      - xslice
    components:
      summary: StructuredDataDictYaml
      output: StructuredDataDictYaml
      data: StructuredDataDataTestTuple
    converters:
      lsst.daf.butler.tests.MetricsExample: lsst.daf.butler.tests.MetricsExampleModel.from_metrics
  DictConvertibleModel:
    # Special storage class to test Pydantic model conversions to/from dict,
    # when that's also what the formatter returns natively.
    pytype: lsst.daf.butler.tests.dict_convertible_model.DictConvertibleModel
    converters:
      dict: lsst.daf.butler.tests.dict_convertible_model.DictConvertibleModel.from_dict
  NativeDictForConvertibleModel:
    # Variant of StructuredDataDict for tests with DictConvertibleModel, to
    # avoid disruption from unexpected conversions in other storage classes.
    pytype: dict
    converters:
      lsst.daf.butler.tests.dict_convertible_model.DictConvertibleModel: lsst.daf.butler.tests.dict_convertible_model.DictConvertibleModel.to_dict
  # Simple storage classes that can be used for testing with JSON and
  # YAML serialization. Need two storage classes for each python type.
  MetricsExampleA:
    pytype: lsst.daf.butler.tests.MetricsExample
  MetricsExampleB:
    pytype: lsst.daf.butler.tests.MetricsExample
  MetricsExampleDataclassA:
    pytype: lsst.daf.butler.tests.MetricsExampleDataclass
  MetricsExampleDataclassB:
    pytype: lsst.daf.butler.tests.MetricsExampleDataclass
  MetricsExampleModelA:
    pytype: lsst.daf.butler.tests.MetricsExampleModel
  MetricsExampleModelB:
    pytype: lsst.daf.butler.tests.MetricsExampleModel
  TupleExampleA:
    pytype: tuple
  TupleExampleB:
    pytype: tuple
  MetricsExampleModelProvenance:
    pytype: lsst.daf.butler.tests.MetricsExampleModel
